<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.constructorcomment_context" deleted="false" description="Comment for created constructors" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.constructorcomment" name="constructorcomment">/*
 *
 */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.destructorcomment_context" deleted="false" description="Comment for created destructors" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.destructorcomment" name="destructorcomment">/*
 *
 */</template><template autoinsert="false" context="org.eclipse.cdt.ui.text.codetemplates.filecomment_context" deleted="false" description="Comment for created C/C++ files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.filecomment" name="filecomment">/* ****************************************************************************************************
 * ${file_name} within the following project: ${project_name}
 *	
 *  compiler:   GNU Tools ARM Embedded (4.7.201xqx)
 *  target:     Cortex Mx
 *  author:		${user}
 * ****************************************************************************************************/

/* ****************************************************************************************************/

/*
 *	******************************* change log *******************************
 *  date			user			comment
 * 	${date}			${user}			- creation of ${file_name}
 *  
 */

</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.typecomment_context" deleted="false" description="Comment for created classes" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.typecomment" name="typecomment">/*
 *
 */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.fieldcomment_context" deleted="false" description="Comment for fields" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.fieldcomment" name="fieldcomment">/*
 *
 */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.methodcomment_context" deleted="false" description="Comment for methods" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.methodcomment" name="methodcomment">/*
 *
 */</template><template autoinsert="true" context="org.eclipse.cdt.core.cxxSource.contenttype_context" deleted="false" description="Default template for newly created C++ source files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cppsourcefile" name="Default C++ source template">${filecomment}
${includes}

${namespace_begin}

${declarations}

${namespace_end}</template><template autoinsert="true" context="org.eclipse.cdt.core.cxxSource.contenttype_context" deleted="false" description="Default template for newly created C++ test files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cpptestfile" name="Default C++ test template">${filecomment}
${includes}

${namespace_begin}

${declarations}

${namespace_end}</template><template autoinsert="false" context="org.eclipse.cdt.core.cxxHeader.contenttype_context" deleted="false" description="Default template for newly created C++ header files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cppheaderfile" name="Default C++ header template">${filecomment}
#ifndef ${include_guard_symbol}
#define ${include_guard_symbol}


/* *******************************************************************
 * includes
 * ******************************************************************/

${includes}

/* *******************************************************************
 * defines
 * ******************************************************************/
 
${namespace_begin}

/* *******************************************************************
 * custom data types (e.g. enumerations, structures)
 * ******************************************************************/

/* *******************************************************************
 * static function declarations
 * ******************************************************************/
${declarations}

/* *******************************************************************
 * static variables
 * ******************************************************************/

${namespace_end}

#endif /* ${include_guard_symbol} */</template><template autoinsert="false" context="org.eclipse.cdt.core.cSource.contenttype_context" deleted="false" description="Default template for newly created C source files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.csourcefile" name="Default C source template">${filecomment}

/* *******************************************************************
 * includes
 * ******************************************************************/
${includes}

/* *******************************************************************
 * defines
 * ******************************************************************/


/* *******************************************************************
 * custom data types (e.g. enumerations, structures, unions)
 * ******************************************************************/


/* *******************************************************************
 * (static) variables declarations
 * ******************************************************************/


/* *******************************************************************
 * static function declarations
 * ******************************************************************/
${declarations}</template><template autoinsert="false" context="org.eclipse.cdt.core.cHeader.contenttype_context" deleted="false" description="Default template for newly created C header files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.cheaderfile" name="Default C header template">${filecomment}

#ifndef ${include_guard_symbol}
#define ${include_guard_symbol}

/* *******************************************************************
 * includes
 * ******************************************************************/
${includes}

/* *******************************************************************
 * defines
 * ******************************************************************/


/* *******************************************************************
 * custom data types (e.g. enumerations, structures, unions)
 * ******************************************************************/


/* *******************************************************************
 * (static) variables declarations
 * ******************************************************************/


/* *******************************************************************
 * static function declarations
 * ******************************************************************/
${declarations}

#endif /* ${include_guard_symbol} */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.namespace_context" deleted="false" description="Beginning of namespace declaration" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.namespace_begin" name="namespace_begin">namespace ${namespace_name} {</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.namespace_context" deleted="false" description="End of namespace declaration" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.namespace_end" name="namespace_end">} /* namespace ${namespace_name} */</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.class_context" deleted="false" description="Code in created class definitions" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.class_body" name="class_body">${declarations}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.methodbody_context" deleted="false" description="Code in created method stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.methodbody" name="methodbody">	// ${todo} Auto-generated method stub
	${body_statement}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.constructorbody_context" deleted="false" description="Code in created constructor stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.constructorbody" name="constructorbody">	// ${todo} Auto-generated constructor stub
	${body_statement}</template><template autoinsert="true" context="org.eclipse.cdt.ui.text.codetemplates.destructorbody_context" deleted="false" description="Code in created destructor stubs" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.destructorbody" name="destructorbody">	${body_statement}
	// ${todo} Auto-generated destructor stub</template><template autoinsert="false" context="org.eclipse.cdt.core.asmSource.contenttype_context" deleted="false" description="Default template for newly created assembly files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.asmsourcefile" name="Default assembly template">${filecomment}

/* *******************************************************************
 * includes
 * ******************************************************************/

/* *******************************************************************
 * defines
 * ******************************************************************/

/* *******************************************************************
 * custom data types (e.g. enumerations, structures, unions)
 * ******************************************************************/

/* *******************************************************************
 * (static) variables declarations
 * ******************************************************************/

/* *******************************************************************
 * static function declarations
 * ******************************************************************/
</template><template autoinsert="true" context="org.eclipse.core.runtime.text.contenttype_context" deleted="false" description="Default template for newly created text files" enabled="true" id="org.eclipse.cdt.ui.text.codetemplates.textfile" name="Default text file template">${file_name}
 Created on: ${date}
     Author: ${user}

</template><template autoinsert="false" context="org.eclipse.cdt.make.core.makefile.contenttype_context" deleted="false" description="makefile for building a static library for a ARM Cortex Mx device" enabled="true" name="makefile_static_lib_Cortex_Mx">#############################################################
# /brief		makefile for building a static library
# /description 	toolchain settings
# /use			for private use only!
# /author		${user}
# /date			${date}				
#############################################################

#################### changelog ##############################
# date		author		comment	
# ${date} 	${user}	- creation of file
#############################################################

# define toolchain (compiler, assembler, linker...)
TOOL_CHAIN = arm-none-eabi
CC = $$(TOOL_CHAIN)-gcc
LD = $$(TOOL_CHAIN)-ld
AR = $$(TOOL_CHAIN)-ar

#############################################################
# output directory for objects
#############################################################
rwildcard=$(wildcard $1$2) $(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2))

GCC_SETTINGS:= $(call rwildcard,../bld*,gcc_settings.inc)
OBJECT_DIR 	= object
ARCHIVE_DIR	= ARM

#############################################################
# Include for compiler settings and project specific files
#############################################################
include $(GCC_SETTINGS)
include ${project_name}.mk

#############################################################
# variable which holds all sources
#############################################################
PATTERN_C 	= $$(wildcard $$(dir)/*.c)
PATTERN_AS	= $$(wildcard $$(dir)/*.s)

SOURCES 	:= $$(foreach dir, $$(SOURCE_PATH), $$(PATTERN_C))
ASSEMBLER 	:= $$(foreach dir, $$(SOURCE_PATH), $$(PATTERN_AS))

#############################################################
# Variable which holds all objects
#############################################################

OBJECTS_BARE_C 	= $$(notdir $$(SOURCES))
OBJECTS_C 		= $$(OBJECTS_BARE_C:.c=.o)
OBJECTS_BARE_AS = $$(notdir $$(ASSEMBLER))
OBJECTS_AS 		= $$(OBJECTS_BARE_AS:.s=.o)
OBJECTS 		= $$(addprefix $$(OBJECT_DIR)/, $$(OBJECTS_C) $$(OBJECTS_AS))

############################################################
# definition for variable holding the look-up-path for
# source files
#############################################################
vpath %  $$(SOURCE_PATH)

#############################################################
# build rules
#############################################################

all:$$(ARCHIVE_DIR)/$$(target).a
	@echo ---------------------------------------
	@echo finished producing library 
	@echo ---------------------------------------

# rule for producing a static libary
$$(ARCHIVE_DIR)/$$(target).a : $$(OBJECTS)
	@echo ---------------------------------------
	@echo build library
	@echo ---------------------------------------
	$$(AR) $$(ARFLAGS) $$@ $$^
	@echo $$@

# rule for producing output files (objects)
$$(OBJECT_DIR)/%.o: %.c;
	@echo ---------------------------------------
	@echo compile and assemble
	@echo ---------------------------------------
	@$$(CC) $$(INCLUDE_PATH) $$(DEFINES) $$(CFLAGS) $$(MCU) $$(FPU) -o $$@ $$&lt;
	@echo $$@
	
# Rule for .s (assembler) files
$$(OBJECT_DIR)/%.o: %.s;
	@echo ---------------------------------------
	@echo assemble
	@echo ---------------------------------------
	@$$(CC) $$(MCU) $$(FPU) $$(ASFLAGS) -c -o $$@ $$&lt;
	@echo $$@

clean: 
	rm -f $$(OBJECTS)
	rm -f $$(ARCHIVE_DIR)/*.a</template><template autoinsert="false" context="org.eclipse.cdt.make.core.makefile.contenttype_context" deleted="false" description="" enabled="true" name="dependency_file_static_library">#############################################################
# /brief		dependency file for a single project
# /description 	toolchain settings
# /use			for private use only!
# /author		${user}
# /date			${date}				
#############################################################

#################### changelog ##############################
# date		author		comment	
# ${date} 	${user}	- creation of file
#############################################################

#############################################################
# Project Name
#############################################################
target = lib${project_name}

#############################################################
# Definitions
#############################################################
DEFINES 	= -DSTM32F4XX -DUSE_STDPERIPH_DRIVER

#############################################################
# target settings / MPU / FPU / MCU
#############################################################
MCU	= 	-mthumb				# assemble thumb code (nothing else possible on Cortex-M!
MCU +=	-mcpu=cortex-m4		
#FPU = 	-mfpu=fpv4-sp-d16 	# name of FPU
#FPU +=	-mfloat-abi=hard	# use floating pointer instruction set

#############################################################
# Include Path
# behaves like a look-up path for include files, which are not
# in the same directory and whose inlude statement does not 
# contain the relative path
#############################################################
INCLUDE_PATH = -I

#############################################################
# Source Path
# variables holding the source path and the output directory
#############################################################
SOURCE_PATH =</template><template autoinsert="false" context="org.eclipse.core.runtime.text.contenttype_context" deleted="false" description="" enabled="true" name="compiler_settings">#############################################################
# /brief		compiler Settings
# /description 	toolchain settings
# /use			for private use only!
# /author		${user}
# /date			${date}				
#############################################################

#################### changelog ##############################
# date		author		comment	
# ${date} 	${user}	- creation of file
#############################################################

#############################################################
# compiler flags
#############################################################

CFLAGS = -c   					# compile and assemble but do not link
CFLAGS += -std=c99				# use the C99 standard
CFLAGS += -Wall					# show all warnings
#CFLAGS += -pedantic 			# issue warning needed for strict compliance to the standard
CFLAGS += -Wstrict-aliasing 	# warn about code which might break strict aliasing rules
CFLAGS += -g 					# generate debug information in default format
CFLAGS += -gdwarf-2 			# gnerate debug information in dwarf v2 format
CFLAGS += -x c 					# assembler-with-cpp	# name mangling
#CFLAGS += -v	 				# set to verbose
CFLAGS += -ffunction-sections 	# place each function in its own section
CFLAGS += -fdata-sections 		# place data items into theier own section
CFLAGS += -O0		 			# optimazation level

#############################################################
# archive builder flags
#############################################################
ARFLAGS = -r	# replace extisting or insert new files into the archive
ARFLAGS += -c	# do not warn if the libray had to be created
ARFLAGS += -s	# create an archive index (cf. ranlib)
ARFLAGS += -v	# be verbose
#ARFLAGS += -t	# display content of archive

#############################################################
# some assembler flags
#############################################################
ASFLAGS =	-g 
ASFLAGS +=	-Wa,--warn 
ASFLAGS +=	-x assembler-with-cpp

#############################################################
# some linker flags
#############################################################

#generate debuggin information - DWARF2 information
LDFLAGS 	= -g 
LDFLAGS 	+=	-gdwarf-2
LDFLAGS 	+= -Xlinker --gc-sections 
LDFLAGS 	+= -Wl,-Map=$$(DIR_OUTPUT)/$$(target).map 
LDFLAGS 	+= -o $$(target).elf</template><template autoinsert="false" context="org.eclipse.cdt.make.core.makefile.contenttype_context" deleted="false" description="" enabled="true" name="dependency_file_binary_Cortex_Mx">#############################################################
# /brief		dependency file for a single project
# /description 	toolchain settings
# /use			for private use only!
# /author		${user}
# /date			${date}				
#############################################################

#################### changelog ##############################
# date		author		comment	
# ${date} 	${user}	- creation of file
#############################################################

#############################################################
# Project Name
#############################################################
target = lib${project_name}

# output directory
DIR_OUTPUT = ${project_name}/bin

#############################################################
# Definitions
#############################################################
DEFINES 	= -DSTM32F4XX -DUSE_STDPERIPH_DRIVER

#############################################################
# target settings / MPU / FPU / MCU
#############################################################
MCU	= 	-mthumb				# assemble thumb code (nothing else possible on Cortex-M!
MCU +=	-mcpu=cortex-m4		
FPU = 	-mfpu=fpv4-sp-d16 	# name of FPU
FPU +=	-mfloat-abi=hard	# use floating pointer instruction set

#############################################################
# Include Path
# behaves like a look-up path for include files, which are not
# in the same directory and whose inlude statement does not 
# contain the relative path
#############################################################
INCLUDE_PATH = -I

#############################################################
# Source Path
# variables holding the source path and the output directory
#############################################################
SOURCE_PATH = .

#############################################################
# Set Libraries and their directory
#############################################################

LIBS		= -lm 
LIBS		+= -lc 
LIBS		+= -l

LIB_DIR		= -L../dev_xy/$$(ARCHIVE_DIR)

LINK_FILE	= ${project_name}/linkerscript/stm32_flash.ld


#############################################################
# build depend libraries
#############################################################
build_depend:
	cd ../lib_xy &amp;&amp; make "all"

#############################################################
# clean depend libraries
#############################################################
clean_depend:
	cd ../lib_xy &amp;&amp; make clean</template><template autoinsert="false" context="org.eclipse.cdt.make.core.makefile.contenttype_context" deleted="false" description="" enabled="true" name="makefile_binary_Cortex_Mx">#############################################################
# /brief		makefile for building a static library
# /description 	toolchain settings
# /use			for private use only!
# /author		${user}
# /date			${date}				
#############################################################

#################### changelog ##############################
# date		author		comment	
# ${date} 	${user}	- creation of file
#############################################################

# define toolchain (compiler, assembler, linker...)
TOOL_CHAIN = arm-none-eabi
CC = $$(TOOL_CHAIN)-gcc
LD = $$(TOOL_CHAIN)-ld
AR = $$(TOOL_CHAIN)-ar
OBJCOPY		= $$(TOOL_CHAIN)-objcopy
OBJDUMP		= $$(TOOL_CHAIN)-objdump
SIZE		= $$(TOOL_CHAIN)-size

#############################################################
# output directory for objects
#############################################################
OBJECT_DIR 	= object
ARCHIVE_DIR	= ARM

#############################################################
# Include for compiler settings and project specific files
#############################################################
include ${project_name}.mk
include gcc_settings.inc

#############################################################
# variable which holds all sources
#############################################################
PATTERN_C 	= $$(wildcard $$(dir)/*.c)
PATTERN_AS	= $$(wildcard $$(dir)/*.s)

SOURCES 	:= $$(foreach dir, $$(SOURCE_PATH), $$(PATTERN_C))
ASSEMBLER 	:= $$(foreach dir, $$(SOURCE_PATH), $$(PATTERN_AS))

#############################################################
# Variable which holds all objects
#############################################################

OBJECTS_BARE_C 	= $$(notdir $$(SOURCES))
OBJECTS_C 		= $$(OBJECTS_BARE_C:.c=.o)
OBJECTS_BARE_AS = $$(notdir $$(ASSEMBLER))
OBJECTS_AS 		= $$(OBJECTS_BARE_AS:.s=.o)
OBJECTS 		= $$(addprefix $$(OBJECT_DIR)/, $$(OBJECTS_C) $$(OBJECTS_AS))

############################################################
# definition for variable holding the look-up-path for
# source files
#############################################################
vpath %  $$(SOURCE_PATH)

#############################################################
# build rules
#############################################################

all: build_depend $$(DIR_OUTPUT)/$$(target).bin $$(DIR_OUTPUT)/$$(target).hex $$(DIR_OUTPUT)/$$(target).lst info 
	@echo ---------------------------------------
	@echo finished producing executable
	@echo ---------------------------------------
	
# elf Target
$$(DIR_OUTPUT)/$$(target).elf: $$(OBJECTS)
	@$$(CC) $$(OBJECTS) $$(LDFLAGS) -T$$(LINK_FILE) $$(MCU) $$(FPU) $$(LIBS) $$(LIB_DIR) -o $$(DIR_OUTPUT)/$$(target).elf
	@echo $$(DIR_OUTPUT)/$$@

# bin Target
$$(DIR_OUTPUT)/$$(target).bin:  $$(DIR_OUTPUT)/$$(target).elf
	@$$(OBJCOPY) -O binary $$(DIR_OUTPUT)/$$(target).elf $$(DIR_OUTPUT)/$$(target).bin
	@echo $$@

$$(DIR_OUTPUT)/$$(target).hex:  $$(DIR_OUTPUT)/$$(target).elf
	@$$(OBJCOPY) -O ihex $$(DIR_OUTPUT)/$$(target).elf $$(DIR_OUTPUT)/$$(target).hex
	@echo $$@

$$(DIR_OUTPUT)/$$(target).lst:  $$(DIR_OUTPUT)/$$(target).elf
	@$$(OBJDUMP) -h -S $$(DIR_OUTPUT)/$$(target).elf &gt; $$(DIR_OUTPUT)/$$(target).lst
	@echo $$@

# Display Memory Usage Info
info:  $$(DIR_OUTPUT)/$$(target).elf
	@$$(SIZE) --format=berkeley $$(DIR_OUTPUT)/$$(target).elf

# rule for producing output files (objects)
$$(OUTPUT_DIR)/%.o: %.c;
	@echo ---------------------------------------
	@echo compile and assemlbe
	@echo ---------------------------------------
	@$$(CC) $$(INCLUDE_PATH) $$(DEFINES) $$(CFLAGS) $$(MCU) $$(FPU) -o $$@ $$&lt;
	@echo $$@
	
# Rule for .s (assembler) files
$$(OUTPUT_DIR)/%.o: %.s;
	@echo ---------------------------------------
	@echo assemble
	@echo ---------------------------------------
	@$$(CC) $$(MCU) $$(FPU) $$(ASFLAGS) -c -o $$@ $$&lt;
	@echo $$@

	
# Clean Target
clean: clean_depend
	rm -f $$(OBJECTS)
	rm -f $$(DIR_OUTPUT)/$$(target).elf
	rm -f $$(DIR_OUTPUT)/$$(target).bin
	rm -f $$(DIR_OUTPUT)/$$(target).map
	rm -f $$(DIR_OUTPUT)/$$(target).lst
	rm -f $$(DIR_OUTPUT)/$$(target).hex</template></templates>